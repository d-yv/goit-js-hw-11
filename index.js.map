{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nexport default async function getImagesByQuery(query) {\n  const link = 'https://pixabay.com/api/';\n  try {\n    const response = await axios.get(link, {\n      params: {\n        key: '50483673-3addba2370166e44fbbdc4d02',\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n      },\n    });\n    console.log('api', response.data);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nexport default function createGallery(images) {\n  console.log('images', images);\n\n  const gallery = document.querySelector('.gallery');\n\n  const imagesArr = images.hits\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => `<li class=\"gallery-item\">\n    <a class=\"gallery-link\" href=${largeImageURL}>\n      <img\n        class=\"gallery-image\"\n        src=${webformatURL}\n        alt=${tags}\n      />\n    </a>\n  </li>`\n    )\n    .join('');\n\n  gallery.innerHTML = imagesArr;\n\n  new SimpleLightbox('.gallery a', {\n    captionDelay: 250,\n    captionPosition: 'bottom',\n    captionsData: 'alt',\n  });\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport getImagesByQuery from './js/pixabay-api';\nimport axios from 'axios';\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport createGallery from './js/render-functions';\n\ndocument.querySelector('.search-form').addEventListener('submit', async e => {\n  e.preventDefault();\n  let searchText = '';\n\n  const messageData = {\n    title: 'Form field must be filled in !',\n    titleColor: 'red',\n    position: 'topRight',\n  };\n\n  if (e.target.elements['search-text'].value.trim() != '') {\n    searchText = e.target.elements['search-text'].value.trim();\n  } else {\n    iziToast.show(messageData);\n  }\n  e.target.reset();\n\n  console.log(searchText);\n\n  const images = await getImagesByQuery(searchText);\n  console.log('main', images);\n\n  createGallery(images);\n});\n"],"names":["getImagesByQuery","query","link","response","axios","error","createGallery","images","gallery","imagesArr","webformatURL","largeImageURL","tags","likes","views","comments","downloads","SimpleLightbox","e","searchText","messageData","iziToast"],"mappings":"owBAEe,eAAeA,EAAiBC,EAAO,CACpD,MAAMC,EAAO,2BACb,GAAI,CACF,MAAMC,EAAW,MAAMC,EAAM,IAAIF,EAAM,CACrC,OAAQ,CACN,IAAK,qCACL,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACP,CAAK,EACD,eAAQ,IAAI,MAAOE,EAAS,IAAI,EACzBA,EAAS,IACjB,OAAQE,EAAO,CACd,eAAQ,MAAMA,CAAK,EACZ,IACR,CACH,CCjBe,SAASC,EAAcC,EAAQ,CAC5C,QAAQ,IAAI,SAAUA,CAAM,EAE5B,MAAMC,EAAU,SAAS,cAAc,UAAU,EAE3CC,EAAYF,EAAO,KACtB,IACC,CAAC,CACC,aAAAG,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IAAY;AAAA,mCACuBL,CAAa;AAAA;AAAA;AAAA,cAGlCD,CAAY;AAAA,cACZE,CAAI;AAAA;AAAA;AAAA,QAIb,EACA,KAAK,EAAE,EAEVJ,EAAQ,UAAYC,EAEpB,IAAIQ,EAAe,aAAc,CAC/B,aAAc,IACd,gBAAiB,SACjB,aAAc,KAClB,CAAG,CACH,CC5BA,SAAS,cAAc,cAAc,EAAE,iBAAiB,SAAU,MAAMC,GAAK,CAC3EA,EAAE,eAAc,EAChB,IAAIC,EAAa,GAEjB,MAAMC,EAAc,CAClB,MAAO,iCACP,WAAY,MACZ,SAAU,UACd,EAEMF,EAAE,OAAO,SAAS,aAAa,EAAE,MAAM,KAAM,GAAI,GACnDC,EAAaD,EAAE,OAAO,SAAS,aAAa,EAAE,MAAM,OAEpDG,EAAS,KAAKD,CAAW,EAE3BF,EAAE,OAAO,QAET,QAAQ,IAAIC,CAAU,EAEtB,MAAMZ,EAAS,MAAMP,EAAiBmB,CAAU,EAChD,QAAQ,IAAI,OAAQZ,CAAM,EAE1BD,EAAcC,CAAM,CACtB,CAAC"}